stages:
    - build
    - test

variables:
    POETRY_VERSION: 1.8.3

install_dependencies:
    stage: build
    image: python:3.12.7-alpine
    variables:
        POETRY_VIRTUALENVS_PATH: $CI_PROJECT_DIR/.venv
    before_script:
        - apk add curl
        - apk add git
        - curl -sSL https://install.python-poetry.org | POETRY_HOME=$CI_PROJECT_DIR/poetry python3 -
        - export PATH="/builds/GROUP_NAME/REPOSITORY_NAME/poetry/bin:$PATH"
        - poetry config virtualenvs.in-project true
        - poetry install
    script:
        - poetry run pre-commit run --all-files
    artifacts:
        paths:
            - $CI_PROJECT_DIR/.venv
            - $CI_PROJECT_DIR/poetry
#    cache:
#        key:
#            files:
#                - poetry.lock
#        paths:
#            - /

run_pytest:
    stage: test
    image: python:3.12.7-alpine
    dependencies:
        - pre-commit
    before_script:
        - apk add curl
        - apk add bash
        - apk add git
    script:
        - export PATH="/builds/GROUP_NAME/REPOSITORY_NAME/bin:$PATH"
        - source $CI_PROJECT_DIR/.venv/bin/activate
        - poetry run pytest tests/*

run_mypy:
    stage: test
    image: python:3.12.7-alpine
    dependencies:
        - pre-commit
    before_script:
        - apk add curl
        - apk add bash
        - apk add git
    script:
        - export PATH="/builds/GROUP_NAME/REPOSITORY_NAME/bin:$PATH"
        - source $CI_PROJECT_DIR/.venv/bin/activate
        - poetry run mypy .